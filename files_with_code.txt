# Project Directory Structure

üìÅ ./
  üìÑ next-env.d.ts
  üìÑ next.config.ts
  üìÑ package-lock.json
  üìÑ package.json
  üìÑ postcss.config.js
  üìÑ tailwind.config.ts
  üìÑ tsconfig.json
  üìÅ public/
  üìÅ src/
    üìÅ app/
      üìÑ globals.css
      üìÑ layout.tsx
      üìÑ page.tsx
    üìÅ components/
      üìÑ DualGallery.tsx
      üìÑ FAQ.tsx
      üìÑ Features.tsx
      üìÑ Footer.tsx
      üìÑ Header.tsx
      üìÑ Hero.tsx
      üìÑ Preloader.tsx
      üìÑ Pricing.tsx
      üìÅ ui/
        üìÑ Button.tsx
        üìÑ Card.tsx


# File Contents

File: next-env.d.ts
================================================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/basic-features/typescript for more information.


--------------------------------------------------------------------------------

File: tailwind.config.ts
================================================================================
import type { Config } from "tailwindcss";

const config: Config = {
  darkMode: ["class"],
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        pnlPositive: "#22c55e",
        pnlNegative: "#ef4444",
      },
      fontFamily: {
        sans: ["var(--font-inter)", "system-ui", "sans-serif"],
        mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "monospace"],
      },
      boxShadow: {
        soft: "0 8px 30px rgba(0,0,0,0.25)",
      },
      borderRadius: {
        xl2: "1rem",
      },
      keyframes: {
        "app-logo-spin": {
          from: { transform: "rotate(0deg)" },
          to: { transform: "rotate(360deg)" },
        },
      },
      animation: {
        "app-logo-spin": "app-logo-spin infinite 20s linear",
      },
    },
  },
  plugins: [],
};

export default config;


--------------------------------------------------------------------------------

File: package.json
================================================================================
{
  "name": "auron-bundler-nextjs",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "clsx": "^2.1.1",
    "framer-motion": "^11.2.10",
    "lucide-react": "^0.395.0",
    "next": "14.2.4",
    "react": "^18",
    "react-dom": "^18"
  },
  "devDependencies": {
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "autoprefixer": "^10.4.21",
    "eslint": "^8",
    "eslint-config-next": "14.2.4",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}


--------------------------------------------------------------------------------

File: tsconfig.json
================================================================================
{
  "compilerOptions": {
    "target": "es5",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "*": ["./src/*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}


--------------------------------------------------------------------------------

File: postcss.config.js
================================================================================
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}


--------------------------------------------------------------------------------

File: next.config.ts
================================================================================
import type { NextConfig } from "next";

const nextConfig: NextConfig = {
  /* config options here */
};

export default nextConfig;


--------------------------------------------------------------------------------

File: src/app/layout.tsx
================================================================================
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Preloader from "../components/Preloader";

const inter = Inter({
  subsets: ["latin", "cyrillic"],
  display: "swap",
  variable: "--font-inter",
});

export const metadata: Metadata = {
  title: "Auron Bundler ‚Äî Launch & Trade Automation",
  description: "Auron Bundler ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ —Ç–æ–∫–µ–Ω–∞, –æ–±—ä—ë–º–æ–≤, —Å–¥–µ–ª–æ–∫ –∏ –∫–æ—à–µ–ª—å–∫–æ–≤.",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="ru" className="dark">
      <body className={`${inter.variable} font-sans antialiased`}>
        {/* –ù–µ–±–æ–ª—å—à–æ–π –ø–ª–∞–≤–Ω—ã–π –ø—Ä–µ–ª–æ–∞–¥–µ—Ä */}
        <Preloader />

        {children}
      </body>
    </html>
  );
}


--------------------------------------------------------------------------------

File: src/app/page.tsx
================================================================================
 import Header from "../components/Header";
 import Hero from "../components/Hero";
import DualGallery from "../components/DualGallery";
 import Features from "../components/Features";
import Pricing from "../components/Pricing";
import FAQ from "../components/FAQ";
import Footer from "../components/Footer";

export default function HomePage() {
  return (
    <div className="flex flex-col min-h-screen">
      <Header />
       <main className="flex-grow">
         <Hero />
        {/* Showcase –±–ª–æ–∫ –∏–∑ 2 –∫–æ–ª–æ–Ω–æ–∫ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ (1,2 —Å–ª–µ–≤–∞; 3 —Å–ø—Ä–∞–≤–∞) */}
       <DualGallery />
         <Features />
        <Pricing />
        <FAQ />
      </main>
      <Footer />
    </div>
  );
}


--------------------------------------------------------------------------------

File: src/app/globals.css
================================================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  color-scheme: dark;
}

html {
  scroll-behavior: smooth;
}

body {
  @apply text-white;
  background:
    radial-gradient(1200px 600px at 10% -10%, rgba(244, 114, 182, 0.35), transparent 60%),
    radial-gradient(1000px 500px at 90% -20%, rgba(192, 132, 252, 0.20), transparent 60%),
    #000;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #3f3f46;
  border-radius: 9999px;
}
.custom-scrollbar::-webkit-scrollbar-track {
  background: #171717;
}

.bg-radial {
  background:
    radial-gradient(1200px 600px at 20% -10%, rgba(244, 114, 182, 0.35), transparent 60%),
    radial-gradient(1000px 500px at 80% -20%, rgba(192, 132, 252, 0.20), transparent 60%);
}

@layer components {
  .card {
    @apply bg-neutral-800 border border-neutral-700 rounded-xl2 shadow-soft;
  }
  
  .hr {
    @apply border-t border-neutral-800;
  }
  
  .btn {
    @apply inline-flex items-center justify-center gap-2 px-4 py-2 rounded-lg font-semibold transition-all duration-200;
  }
  
  /* ----- –ï–î–ò–ù–°–¢–í–ï–ù–ù–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–î–ï–°–¨ ----- */
  .btn-primary {
    @apply 
      /* 1. –í–∑—è—Ç –≤–∞—à –ò–°–•–û–î–ù–´–ô (—Å–≤–µ—Ç–ª—ã–π) –≥—Ä–∞–¥–∏–µ–Ω—Ç –∏ —Å–¥–µ–ª–∞–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º */
      bg-gradient-to-r from-purple-700 via-purple-800 to-purple-900 text-white
      
      /* 2. –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏—è –∏ –±–ª–∏–∫–∞ */
      animate-gradient animate-shine
      
      /* 3. –ü—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –∫–Ω–æ–ø–∫–∞ —Ç–µ–ø–µ—Ä—å –Ω–µ –º–µ–Ω—è–µ—Ç —Ü–≤–µ—Ç, –∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —è—Ä—á–µ –∏ –±–æ–ª—å—à–µ */
      hover:scale-105 hover:brightness-110 active:scale-100;
  }
  
  .btn-ghost {
    @apply bg-neutral-800 hover:bg-neutral-700 text-white border border-neutral-700;
  }
}

.mono {
  @apply font-mono text-sm;
}

.section {
  @apply w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8;
}

.scroller__inner {
  animation: scroll 10s linear infinite;
}

@keyframes scroll {
  to {
    transform: translateX(calc(-50% - 1rem));
  }
}

.svg-white-filter {
  filter: brightness(0) saturate(100%) invert(100%);
}

@layer utilities {
  /* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–µ—Ä–µ–ª–∏–≤–∞–Ω–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ */
  @keyframes background-pan {
    0% { background-position: 0% center; }
    50% { background-position: 100% center; }
    100% { background-position: 0% center; }
  }

  /* –ê–Ω–∏–º–∞—Ü–∏—è –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ "–±–ª–∏–∫–∞" */
  @keyframes shine-pan {
    from { transform: translateX(-100%) skewX(-20deg); }
    to { transform: translateX(200%) skewX(-20deg); }
  }

  /* –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π */
  .animate-gradient {
    background-size: 200% 200%;
    animation: background-pan 8s linear infinite;
  }
  
  .animate-shine {
    position: relative;
    overflow: hidden;
  }

  .animate-shine::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
      100deg,
      rgba(255, 255, 255, 0) 20%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0) 80%
    );
    transform: translateX(-100%) skewX(-20deg);
    animation: shine-pan 3.5s ease-in-out infinite;
  }
}
.scroller__inner {
  /* –≠—Ç–∏ —Å—Ç–∏–ª–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –∫–ª–∞—Å—Å—ã Tailwind (flex, gap-8) */
  /* –Ω–æ –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏ —è –∏—Ö –∑–¥–µ—Å—å –æ—Å—Ç–∞–≤–ª—è—é. */
  display: flex;
  gap: 2rem; /* –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç gap-8 */
}

/* –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∞—Ç—Ä–∏–±—É—Ç data-animated */
.scroller[data-animated="true"] .scroller__inner {
  /* –°–ê–ú–û–ï –í–ê–ñ–ù–û–ï: –ó–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –±—ã—Ç—å —à–∏—Ä–∏–Ω–æ–π —Å–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
  width: max-content;
  animation: scroll 40s linear infinite;
}

@keyframes scroll {
  from {
    transform: translateX(0);
  }
  to {
    /* 
      –°–¥–≤–∏–≥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–ª–µ–≤–æ —Ä–æ–≤–Ω–æ –Ω–∞ –ø–æ–ª–æ–≤–∏–Ω—É –µ–≥–æ —à–∏—Ä–∏–Ω—ã.
      –ü–æ—Å–∫–æ–ª—å–∫—É –≤–Ω—É—Ç—Ä–∏ –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –≥—Ä—É–ø–ø—ã –±–ª–æ–∫–æ–≤, –≤—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∞
      –≤—Å—Ç–∞–µ—Ç —Ç–æ—á–Ω–æ –Ω–∞ –º–µ—Å—Ç–æ –ø–µ—Ä–≤–æ–π, —Å–æ–∑–¥–∞–≤–∞—è –±–µ—Å—à–æ–≤–Ω—ã–π —Ü–∏–∫–ª.
    */
    transform: translateX(-50%);
  }
}

--------------------------------------------------------------------------------

File: src/components/DualGallery.tsx
================================================================================
import Image from "next/image";
import React from "react";

export default function DualGallery() {
  return (
    <section className="section relative py-16 md:py-24">
      {/* –≤–µ—Ä—Ö–Ω—è—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –∫–∞–∫ –Ω–∞ –º–∞–∫–µ—Ç–µ */}
      <div className="absolute inset-x-0 top-0 h-px bg-neutral-800" />

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞ */}
      <div className="mb-10 md:mb-12">
        <h2 className="text-3xl md:text-5xl font-extrabold leading-tight">
          <span className="bg-clip-text text-transparent bg-gradient-to-r from-rose-400 via-fuchsia-400 to-violet-400">
            Powerful features
          </span>{" "}
          <span className="text-white">at your fingertips</span>
        </h2>
        <p className="mt-4 max-w-3xl text-neutral-400">
          Discover unique solutions designed to streamline your journey and improve your experience.
        </p>
      </div>

      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–µ—Ç–∫–∏ + –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ –Ω–∞ md+ */}
      <div className="relative">
        <div className="pointer-events-none hidden md:block absolute inset-y-0 left-1/2 -translate-x-1/2 w-px bg-neutral-800" />

        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {/* –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: 1.png –∏ 2.png */}
          <div className="flex flex-col justify-between space-y-6">
            <figure className="card p-0 overflow-hidden border border-neutral-800 bg-neutral-900/40">
              <div className="relative">
                {/* –º—è–≥–∫–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ */}
                <div className="absolute inset-0 bg-gradient-to-br from-fuchsia-500/10 via-rose-500/5 to-transparent pointer-events-none" />
                <Image
                  src="/1.png"
                  alt="Wallet Manager preview"
                  width={1600}
                  height={900}
                  className="w-full h-auto"
                  priority
                />
              </div>
            </figure>

            <figure className="card p-0 overflow-hidden border border-neutral-800 bg-neutral-900/40">
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-tr from-rose-500/10 via-fuchsia-500/5 to-transparent pointer-events-none" />
                <Image
                  src="/2.png"
                  alt="Wallet Manager cards"
                  width={1600}
                  height={900}
                  className="w-full h-auto"
                />
              </div>
            </figure>
          </div>

          {/* –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: 3.png and 4.png */}
          <div className="space-y-6">
                                    <figure className="card p-0 overflow-hidden border border-neutral-800 bg-neutral-900/40">
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-tr from-rose-500/10 via-fuchsia-500/5 to-transparent pointer-events-none" />
                <Image
                  src="/6.png"
                  alt="Wallet Manager cards"
                  width={1600}
                  height={900}
                  className="w-full h-auto"
                />
              </div>
            </figure>
            <figure className="card p-0 overflow-hidden border border-neutral-800 bg-neutral-900/40">
              <div className="relative">
                <div className="absolute inset-0 bg-gradient-to-bl from-fuchsia-500/10 via-rose-500/5 to-transparent pointer-events-none" />
                <Image
                  src="/3.png"
                  alt="Built-in transaction monitor"
                  width={1600}
                  height={900}
                  className="w-full h-auto"
                />
              </div>
            </figure>

          </div>
        </div>
      </div>

      {/* –Ω–∏–∂–Ω—è—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω–∞—è –ª–∏–Ω–∏—è –∫–∞–∫ –Ω–∞ –º–∞–∫–µ—Ç–µ (—Ç–æ–Ω–∫–∞—è) */}
      <div className="mt-12 h-px bg-neutral-800" />
    </section>
  );
}


--------------------------------------------------------------------------------

File: src/components/Hero.tsx
================================================================================
import React from 'react';
import { Button } from './ui/Button';
import { PlayCircle } from 'lucide-react';

export default function Hero() {
  return (
    <section className="section relative py-20 md:py-32 text-center overflow-hidden">
      <div className="relative z-10">
        <h1 className="text-4xl md:text-6xl font-black mb-6 leading-tight">
          Automate Token Launch and Trading
        </h1>
        <p className="max-w-3xl mx-auto text-lg md:text-xl text-neutral-300 mb-10">
          Auron Bundler is your all-in-one tool for automating token launches, generating volume, and managing trades and wallets.
        </p>
        <div className="flex justify-center items-center gap-4">
          <Button variant="primary" className="px-6 py-3 text-lg">
            Get Started
          </Button>
          <Button variant="ghost" className="px-6 py-3 text-lg">
            <PlayCircle className="w-5 h-5" />
            Watch Demo
          </Button>
        </div>
      </div>
    </section>
  );
}

--------------------------------------------------------------------------------

File: src/components/Pricing.tsx
================================================================================
import React from "react";
import { Card } from "./ui/Card";
import { Button } from "./ui/Button";
import { Check } from "lucide-react";

type Plan = {
  name: string;
  price: string;
  badge?: string;
  features: string[];
  cta: string;
  highlighted?: boolean;
};

const plans: Plan[] = [
  {
    name: "Starter",
    price: "$0",
    features: [
      "Demo mode",
      "Basic bundle templates",
      "1 project",
      "Email support",
    ],
    cta: "Try it",
  },
  {
    name: "Pro",
    price: "$49 / mo",
    badge: "Top choice",
    highlighted: true,
    features: [
      "Full access to bundlers",
      "Volume scheduler",
      "Up to 20 projects",
      "Priority support",
    ],
    cta: "Go Pro",
  },
  {
    name: "Enterprise",
    price: "Custom",
    features: [
      "Self-hosted/On-prem",
      "Audit and security",
      "Unlimited projects",
      "SLA 99.9%",
    ],
    cta: "Contact us",
  },
];

export default function Pricing() {
  return (
    <section id="pricing" className="section py-20 md:py-28">
      <div className="text-center mb-12">
        <h2 className="text-3xl md:text-4xl font-bold">Pricing</h2>
        <p className="mt-4 text-lg text-neutral-400">
          Choose a plan for your current needs, scale without limits.
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        {plans.map((plan, idx) => (
          <div key={plan.name} className="opacity-100 translate-y-0">
            <Card
              className={`p-6 md:p-8 relative ${
                plan.highlighted ? "border-rose-400" : ""
              }`}
            >
              {plan.badge && (
                <span className="absolute -top-3 right-4 bg-gradient-to-r from-rose-400 via-fuchsia-400 to-violet-400 text-white text-xs font-semibold px-2 py-1 rounded">
                  {plan.badge}
                </span>
              )}
              <h3 className="text-2xl font-bold mb-2">{plan.name}</h3>
              <div className="text-3xl font-extrabold mb-6">{plan.price}</div>

              <ul className="space-y-3 mb-8">
                {plan.features.map((f) => (
                  <li key={f} className="flex items-start gap-3 text-neutral-300">
                    <Check className="w-5 h-5 bg-clip-text text-transparent bg-gradient-to-r from-rose-400 via-fuchsia-400 to-violet-400 mt-0.5 shrink-0" />
                    <span>{f}</span>
                  </li>
                ))}
              </ul>

              <Button
                className={`w-full ${
                  plan.highlighted ? "btn-primary" : ""
                }`}
                variant={plan.highlighted ? "primary" : "ghost"}
              >
                {plan.cta}
              </Button>
            </Card>
          </div>
        ))}
      </div>
    </section>
  );
}


--------------------------------------------------------------------------------

File: src/components/Features.tsx
================================================================================
import React, { useMemo } from 'react';
import { Card } from './ui/Card';
import { Zap, ShieldCheck, Repeat, Wallet } from 'lucide-react';

// --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π ---

// –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
const getRandomInt = (min: number, max: number) => Math.floor(Math.random() * (max - min + 1)) + min;

// –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ
const getRandomFloat = (min: number, max: number) => Math.random() * (max - min) + min;

// –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
const getRandomItem = (arr: any[]): any => arr[Math.floor(Math.random() * arr.length)];


// --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–≤ ---

// –¶–≤–µ—Ç–æ–≤—ã–µ –ø–∞—Ä—ã —Ç–µ–ø–µ—Ä—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ HEX-–∫–æ–¥–∞–º–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ inline-—Å—Ç–∏–ª—è—Ö
const colorPairs = [
  { from: '#f43f5e', to: '#a78bfa' }, // rose-500 to violet-400
  { from: '#3b82f6', to: '#10b981' }, // blue-500 to emerald-500
  { from: '#f59e0b', to: '#ef4444' }, // amber-500 to red-500
  { from: '#a855f7', to: '#ec4899' }, // purple-500 to pink-500
  { from: '#0ea5e9', to: '#84cc16' }, // sky-500 to lime-500
  { from: '#f97316', to: '#06b6d4' }, // orange-500 to cyan-500
];

// –ö–∞—Ä—Ç–∞ –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ Tailwind –≤ CSS-—Å–≤–æ–π—Å—Ç–≤–∞
const directionMap = {
  'bg-gradient-to-r': 'to right',
  'bg-gradient-to-l': 'to left',
  'bg-gradient-to-t': 'to top',
  'bg-gradient-to-b': 'to bottom',
  'bg-gradient-to-tr': 'to top right',
  'bg-gradient-to-tl': 'to top left',
  'bg-gradient-to-br': 'to bottom right',
  'bg-gradient-to-bl': 'to bottom left',
};
type DirectionKey = keyof typeof directionMap;
const directions = Object.keys(directionMap);


// --- –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---

// --- –û—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ ---

const features = [
  {
    icon: <Zap />,
    title: 'Instant Launch',
    description: 'Launch your token on any network in minutes with full liquidity pre-configuration.',
  },
  {
    icon: <Repeat />,
    title: 'Volume Generation',
    description: 'Our algorithm creates realistic trading volumes to attract traders\' attention.',
  },
  {
    icon: <Wallet />,
    title: 'Wallet Management',
    description: 'Mass creation and management of wallets for token distribution and airdrops.',
  },
  {
    icon: <ShieldCheck />,
    title: 'Security',
    description: 'Full control over your assets. Private keys are stored only by you.',
  },
    // ---- –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, ----
    // ---- –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏   ----
    // ---- –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ JSX.                           ----
  {
    icon: <Zap />,
    title: 'Instant Launch',
    description: 'Launch your token on any network in minutes with full liquidity pre-configuration.',
  },
  {
    icon: <Repeat/>,
    title: 'Volume Generation',
    description: 'Our algorithm creates realistic trading volumes to attract traders\' attention.',
  },
  {
    icon: <Wallet />,
    title: 'Wallet Management',
    description: 'Mass creation and management of wallets for token distribution and airdrops.',
  },
  {
    icon: <ShieldCheck/>,
    title: 'Security',
    description: 'Full control over your assets. Private keys are stored only by you.',
  },
    {
    icon: <Zap />,
    title: 'Instant Launch',
    description: 'Launch your token on any network in minutes with full liquidity pre-configuration.',
  },
  {
    icon: <Repeat />,
    title: 'Volume Generation',
    description: 'Our algorithm creates realistic trading volumes to attract traders\' attention.',
  },
  {
    icon: <Wallet />,
    title: 'Wallet Management',
    description: 'Mass creation and management of wallets for token distribution and airdrops.',
  },
  {
    icon: <ShieldCheck />,
    title: 'Security',
    description: 'Full control over your assets. Private keys are stored only by you.',
  },
    // ---- –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ, ----
    // ---- –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã, —Ç–∞–∫ –∫–∞–∫ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏   ----
    // ---- –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ JSX.                           ----
  {
    icon: <Zap />,
    title: 'Instant Launch',
    description: 'Launch your token on any network in minutes with full liquidity pre-configuration.',
  },
  {
    icon: <Repeat/>,
    title: 'Volume Generation',
    description: 'Our algorithm creates realistic trading volumes to attract traders\' attention.',
  },
  {
    icon: <Wallet />,
    title: 'Wallet Management',
    description: 'Mass creation and management of wallets for token distribution and airdrops.',
  },
  {
    icon: <ShieldCheck/>,
    title: 'Security',
    description: 'Full control over your assets. Private keys are stored only by you.',
  },
];


// --- –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç–∏–ª—è ---

const generateRandomGradientStyle = () => {
  // 1. –°–æ–∑–¥–∞–µ–º —Ç–µ–º–Ω—ã–µ "—Ç–æ—á–∫–∏" (—Ä–∞–¥–∏–∞–ª—å–Ω—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã)
  const numDots = getRandomInt(3, 6); // –û—Ç 3 –¥–æ 6 —Ç–µ–º–Ω—ã—Ö –ø—è—Ç–µ–Ω –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–µ
  let radialGradients = [];

  for (let i = 0; i < numDots; i++) {
    const x = getRandomInt(0, 100);
    const y = getRandomInt(0, 100);
    const size = getRandomInt(40, 80); // –†–∞–∑–º–µ—Ä –ø—è—Ç–Ω–∞ –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
    const opacity = getRandomFloat(0.25, 0.55).toFixed(2); // –ù–µ–ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å

    radialGradients.push(
      `radial-gradient(circle at ${x}% ${y}%, rgba(0,0,0,${opacity}) 0%, transparent ${size}%)`
    );
  }

  // 2. –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç–Ω–æ–π —Ñ–æ–Ω (–ª–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç)
  const randomDirectionClass = getRandomItem(directions) as DirectionKey;
  const cssDirection = directionMap[randomDirectionClass];
  const { from, to } = getRandomItem(colorPairs);
  const linearGradient = `linear-gradient(${cssDirection}, ${from}, ${to})`;

  // 3. –°–æ–≤–º–µ—â–∞–µ–º –≤—Å–µ —Å–ª–æ–∏ –≤ –æ–¥–Ω–æ CSS-—Å–≤–æ–π—Å—Ç–≤–æ
  // –†–∞–¥–∏–∞–ª—å–Ω—ã–µ –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã –∏–¥—É—Ç –ø–µ—Ä–≤—ã–º–∏, —á—Ç–æ–±—ã –±—ã—Ç—å "–ø–æ–≤–µ—Ä—Ö" —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ñ–æ–Ω–∞
  const backgroundImage = [...radialGradients, linearGradient].join(', ');

  return { backgroundImage }; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è inline-—Å—Ç–∏–ª—è
};


// --- –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ---

export default function Features() {
  const randomizedFeatures = useMemo(() => {
    // –î–ª—è –∫–∞–∂–¥–æ–π —Ñ–∏—á–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç —Å—Ç–∏–ª—è
    return features.map(feature => ({
      ...feature,
      style: generateRandomGradientStyle(),
    }));
  }, []);

  const duplicatedRandomFeatures = [...randomizedFeatures, ...randomizedFeatures];

  return (
    <section id="features" className="relative py-20 md:py-28 overflow-x-hidden">
      <div className="relative z-10 text-center mb-12 px-4">
        <h2 className="text-3xl md:text-4xl font-bold">All Tools in One Place</h2>
        <p className="mt-4 text-lg text-neutral-400">Powerful functionality for a successful start to your project.</p>
      </div>

      <div
        className="scroller w-full overflow-hidden"
        data-animated="true"
        style={{ maskImage: 'linear-gradient(to right, transparent, white 10%, white 90%, transparent)' }}
      >
        <div className="scroller__inner flex gap-8">
          {duplicatedRandomFeatures.map((feature, index) => (
            <Card
              key={`${feature.title}-${index}`}
              className="flex-shrink-0 w-[300px] md:w-[350px] text-white" // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
              style={feature.style} // <-- –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π inline-—Å—Ç–∏–ª—å
              aria-hidden={index >= randomizedFeatures.length}
            >
              <div className="mb-4">{feature.icon}</div>
              <h3 className="text-xl font-semibold mb-2">{feature.title}</h3>
              <p className="text-neutral-300">{feature.description}</p>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
}


--------------------------------------------------------------------------------

File: src/components/Footer.tsx
================================================================================
import React from "react";

export default function Footer() {
  const year = new Date().getFullYear();
  return (
    <footer className="border-t border-neutral-800">
      <div className="section py-12 grid grid-cols-1 md:grid-cols-4 gap-8 text-neutral-400">
        <div>
          <h3 className="text-lg font-bold text-white mb-3">Auron Bundler</h3>
          <p className="text-sm">&copy; {year} All rights reserved.</p>
          <div className="flex items-center gap-4 mt-4">
            <a href="https://x.com" target="_blank" rel="noopener noreferrer" className="hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" className="w-5 h-5"><path d="M18.244 2.25h3.308l-7.227 8.26L22.5 21.75h-6.594l-5.17-6.759-5.917 6.759H1.51l7.73-8.829L1.5 2.25h6.75l4.657 6.15 5.337-6.15Z"/></svg>
            </a>
            <a href="https://discord.com" target="_blank" rel="noopener noreferrer" className="text-neutral-400 hover:text-white">
              <svg width="71" height="55" viewBox="0 0 71 55" fill="currentColor" xmlns="http://www.w3.org/2000/svg" className="w-5 h-5">
                <g clip-path="url(#clip0)">
                  <path d="M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z" fill="currentColor"/>
                </g>
                <defs>
                  <clipPath id="clip0">
                    <rect width="71" height="55" fill="white"/>
                  </clipPath>
                </defs>
              </svg>
            </a>
          </div>
        </div>
        <div>
          <h4 className="font-semibold text-white mb-2">Resources</h4>
          <ul className="space-y-2 text-sm">
            <li><a href="#" className="hover:text-white">Documentation</a></li>
            <li><a href="#" className="hover:text-white">Blog</a></li>
          </ul>
        </div>
        <div>
          <h4 className="font-semibold text-white mb-2">Help</h4>
          <ul className="space-y-2 text-sm">
            <li><a href="#" className="hover:text-white">Knowledge base</a></li>
            <li><a href="#" className="hover:text-white">Email us</a></li>
          </ul>
        </div>
        <div>
          <h4 className="font-semibold text-white mb-2">Company</h4>
          <ul className="space-y-2 text-sm">
            <li><a href="#" className="hover:text-white">Privacy Policy</a></li>
            <li><a href="#" className="hover:text-white">Terms of Service</a></li>
          </ul>
        </div>
      </div>
    </footer>
  );
}


--------------------------------------------------------------------------------

File: src/components/Preloader.tsx
================================================================================
"use client";
import React from "react";
import { AnimatePresence, motion } from "framer-motion";

export default function Preloader() {
  const [show, setShow] = React.useState(true);

  React.useEffect(() => {
    const t = setTimeout(() => setShow(false), 800); // slight delay
    return () => clearTimeout(t);
  }, []);

  return (
    <AnimatePresence>
      {show && (
        <motion.div
          initial={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          transition={{ duration: 0.25 }}
          className="fixed inset-0 z-[100] bg-neutral-900/80 backdrop-blur-sm flex items-center justify-center"
        >
          <motion.div
            initial={{ scale: 0.9, opacity: 0 }}
            animate={{ scale: 1, opacity: 1 }}
            exit={{ scale: 0.98, opacity: 0 }}
            transition={{ duration: 0.25 }}
            className="flex flex-col items-center gap-4"
          >
            <div className="relative">
              <div className="h-12 w-12 rounded-full border-2 border-neutral-700" />
              <motion.div
                className="absolute inset-0 rounded-full border-2 border-rose-400 border-t-transparent"
                animate={{ rotate: 360 }}
                transition={{ repeat: Infinity, duration: 0.9, ease: "linear" }}
              />
            </div>
            <p className="text-sm text-neutral-300">Loading interface‚Ä¶</p>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}


--------------------------------------------------------------------------------

File: src/components/Header.tsx
================================================================================
import React from 'react';
import Image from 'next/image';
import { Button } from './ui/Button';

export default function Header() {
  return (
    <header className="sticky top-0 z-50 bg-neutral-900/70 backdrop-blur-xl border-b border-neutral-800">
      <div className="section h-20 flex items-center justify-between">
        <div className="flex items-center gap-3">
          <Image src="/logo-auron.png" alt="Auron Logo" width={30} height={30} />
          <Image src="/auron.png" alt="Auron" width={100} height={50} className="ml-2" />
        </div>
        <div className="flex items-center gap-6">
          <nav className="hidden md:flex items-center gap-6">
            {/* Navigation links can be added here */}
          </nav>
          <div className="flex items-center gap-4">
            {/* X (Twitter) Icon */}
            <a href="https://x.com" target="_blank" rel="noopener noreferrer" className="text-neutral-400 hover:text-white">
              <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 24 24" className="w-5 h-5">
                <path d="M18.244 2.25h3.308l-7.227 8.26L22.5 21.75h-6.594l-5.17-6.759-5.917 6.759H1.51l7.73-8.829L1.5 2.25h6.75l4.657 6.15 5.337-6.15Z" />
              </svg>
            </a>

            {/* Discord Icon */}
            <a href="https://discord.com" target="_blank" rel="noopener noreferrer" className="text-neutral-400 hover:text-white">
              <svg width="71" height="55" viewBox="0 0 71 55" fill="currentColor" xmlns="http://www.w3.org/2000/svg" className="w-5 h-5">
                <g clip-path="url(#clip0)">
                  <path d="M60.1045 4.8978C55.5792 2.8214 50.7265 1.2916 45.6527 0.41542C45.5603 0.39851 45.468 0.440769 45.4204 0.525289C44.7963 1.6353 44.105 3.0834 43.6209 4.2216C38.1637 3.4046 32.7345 3.4046 27.3892 4.2216C26.905 3.0581 26.1886 1.6353 25.5617 0.525289C25.5141 0.443589 25.4218 0.40133 25.3294 0.41542C20.2584 1.2888 15.4057 2.8186 10.8776 4.8978C10.8384 4.9147 10.8048 4.9429 10.7825 4.9795C1.57795 18.7309 -0.943561 32.1443 0.293408 45.3914C0.299005 45.4562 0.335386 45.5182 0.385761 45.5576C6.45866 50.0174 12.3413 52.7249 18.1147 54.5195C18.2071 54.5477 18.305 54.5139 18.3638 54.4378C19.7295 52.5728 20.9469 50.6063 21.9907 48.5383C22.0523 48.4172 21.9935 48.2735 21.8676 48.2256C19.9366 47.4931 18.0979 46.6 16.3292 45.5858C16.1893 45.5041 16.1781 45.304 16.3068 45.2082C16.679 44.9293 17.0513 44.6391 17.4067 44.3461C17.471 44.2926 17.5606 44.2813 17.6362 44.3151C29.2558 49.6202 41.8354 49.6202 53.3179 44.3151C53.3935 44.2785 53.4831 44.2898 53.5502 44.3433C53.9057 44.6363 54.2779 44.9293 54.6529 45.2082C54.7816 45.304 54.7732 45.5041 54.6333 45.5858C52.8646 46.6197 51.0259 47.4931 49.0921 48.2228C48.9662 48.2707 48.9102 48.4172 48.9718 48.5383C50.038 50.6034 51.2554 52.5699 52.5959 54.435C52.6519 54.5139 52.7526 54.5477 52.845 54.5195C58.6464 52.7249 64.529 50.0174 70.6019 45.5576C70.6551 45.5182 70.6887 45.459 70.6943 45.3942C72.1747 30.0791 68.2147 16.7757 60.1968 4.9823C60.1772 4.9429 60.1437 4.9147 60.1045 4.8978ZM23.7259 37.3253C20.2276 37.3253 17.3451 34.1136 17.3451 30.1693C17.3451 26.225 20.1717 23.0133 23.7259 23.0133C27.308 23.0133 30.1626 26.2532 30.1066 30.1693C30.1066 34.1136 27.28 37.3253 23.7259 37.3253ZM47.3178 37.3253C43.8196 37.3253 40.9371 34.1136 40.9371 30.1693C40.9371 26.225 43.7636 23.0133 47.3178 23.0133C50.9 23.0133 53.7545 26.2532 53.6986 30.1693C53.6986 34.1136 50.9 37.3253 47.3178 37.3253Z" fill="currentColor"/>
                </g>
                <defs>
                  <clipPath id="clip0">
                    <rect width="71" height="55" fill="white"/>
                  </clipPath>
                </defs>
              </svg>
            </a>

            <Button variant="primary">Dashboard</Button>
          </div>
        </div>
      </div>
    </header>
  );
}


--------------------------------------------------------------------------------

File: src/components/FAQ.tsx
================================================================================
"use client";

import React, { useState } from "react";
import { Card } from "./ui/Card";

const faqs = [
  {
    q: "Is it safe to connect wallets?",
    a: "Yes. The keys are stored only by you. The platform can be self-hosted, and the connection to providers is made directly.",
  },
  {
    q: "Which networks are supported?",
    a: "We are starting with popular L1/L2. Support is supplemented by modules, including custom EVM-compatible networks.",
  },
  {
    q: "Is it possible to automate volume generation?",
    a: "Yes. A scheduler with volume patterns, time windows, and wallet rotation is available.",
  },
  {
    q: "How to test without risk?",
    a: "Use demo mode and testnets. Dry-run and simulations are also available.",
  },
];

export default function FAQ() {
  return (
    <section id="faq" className="section py-20 md:py-28">
      <div className="text-center mb-12">
        <h2 className="text-3xl md:text-4xl font-bold">FAQ</h2>
        <p className="mt-4 text-lg text-neutral-400">
          Frequently asked questions about launch, automation, and security.
        </p>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        {faqs.map((item, i) => {
          const [isOpen, setIsOpen] = useState(false);

          return (
            <Card key={i} className="p-6">
              <div className="group">
                <div
                  className="cursor-pointer flex items-center justify-between"
                  onClick={() => setIsOpen(!isOpen)}
                >
                  <h3 className="text-lg font-semibold">{item.q}</h3>
                  <span
                    className={`text-neutral-400 transition-transform ${
                      isOpen ? "rotate-180" : ""
                    }`}
                  >
                    ‚ñæ
                  </span>
                </div>
                <div
                  className={`overflow-hidden transition-all duration-500 ease-in-out ${
                    isOpen ? "max-h-screen opacity-100 mt-3" : "max-h-0 opacity-0"
                  }`}
                >
                  <p className="text-neutral-300">{item.a}</p>
                </div>
              </div>
            </Card>
          );
        })}
      </div>
    </section>
  );
}


--------------------------------------------------------------------------------

File: src/components/ui/Card.tsx
================================================================================
import React from 'react';
import clsx from 'clsx';

interface CardProps extends React.HTMLAttributes<HTMLDivElement> {
  children: React.ReactNode;
}

export const Card = ({ className, children, ...props }: CardProps) => {
  return (
    <div className={clsx('card p-6', className)} {...props}>
      {children}
    </div>
  );
};


--------------------------------------------------------------------------------

File: src/components/ui/Button.tsx
================================================================================
import React from 'react';
import clsx from 'clsx';

interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
  variant?: 'primary' | 'ghost';
  children: React.ReactNode;
}

export const Button = ({ className, variant = 'primary', children, ...props }: ButtonProps) => {
  return (
    <button
      className={clsx(
        'btn',
        {
          'btn-primary': variant === 'primary',
          'btn-ghost': variant === 'ghost',
        },
        className
      )}
      {...props}
    >
      {children}
    </button>
  );
};


--------------------------------------------------------------------------------

